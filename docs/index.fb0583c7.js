/* @license
 * Jacob Perez <https://jacobxperez.github.io/blog/>
 * Copyright (C) 2023 Jacob Perez <jacobxperez@gmx.com>
 * Licensed under the Apache License, Version 2.0
 * http://www.apache.org/licenses/LICENSE-2.0
-----------------------------------------------------------------------------*/
const meta={type:"",title:document.title,subtitle:"",author:{name:"",url:""},date:{published:"",revised:""},set authorName(e){this.author.name=e},get authorName(){return this.author.name},set authorUrl(e){this.author.url=e},get authorUrl(){return this.author.url},set datePublished(e){this.date.published=e},get datePublished(){return this.date.published},set dateRevised(e){this.date.revised=e},get dateRevised(){return this.date.revised}},template={appendString(e,t){document.querySelector(t).insertAdjacentHTML("beforeend",e)},appendTemplate(e,t,r){const n=e.querySelector(t),a=n.content.cloneNode(!0);document.querySelector(r).appendChild(a),n.remove()},parseTemplate(e,t,r){const n=(new DOMParser).parseFromString(e,"text/html");this.appendTemplate(n,t,r)},setTemplate(e,t,r=null){return new Promise(((t,r)=>{e?t():r()})).then((()=>this.appendTemplate(document,e,t))).then((()=>{"function"==typeof r&&r()})).catch((e=>console.error(e,"Error: Template not found"))),this},fromString(e,t,r=null){return new Promise(((t,r)=>{"string"==typeof e?t():r(err="Error: Source is not a String")})).then((()=>this.appendString(e,t))).then((()=>{"function"==typeof r&&r()})).catch((e=>console.error(e))),this},fetchTemplate(e,t,r=null){return(async()=>{try{let n=await fetch(e),a=await n.text();this.parseTemplate(a,t,t),"function"==typeof r&&r()}catch(e){console.error(e,"Error: Template not found")}})(),this}};